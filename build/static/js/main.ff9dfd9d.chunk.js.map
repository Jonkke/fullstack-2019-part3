{"version":3,"sources":["components/AddPersonForm.js","components/Filter.js","components/Person.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["AddPersonForm","props","react_default","a","createElement","onSubmit","submitHandler","value","nameValue","onChange","nameHandler","numValue","numHandler","type","Filter","text","handler","Person","name","num","onClick","deleteHandler","baseUrl","services_persons","axios","get","then","res","data","person","post","id","delete","concat","put","Notification","notificationStyle","position","border","background","isBad","borderColor","borderRadius","width","height","top","left","marginLeft","textAlign","style","fontSize","fontWeight","msg","App","_useState","useState","_useState2","Object","slicedToArray","persons","setPersons","_useState3","_useState4","shownPersons","setShownPersons","_useState5","_useState6","newName","setNewName","_useState7","_useState8","newNumber","setNewNumber","_useState9","_useState10","newFilter","setNewFilter","_useState11","_useState12","notificationMsg","setNotificationMsg","_useState13","_useState14","notificationVisible","setNotificationVisible","useEffect","updateAllPersons","setTimeout","personService","fetchedPersons","catch","updateShownPersons","filterText","filteredPersons","filter","p","toLowerCase","includes","trim","components_Notification","components_Filter","e","target","components_AddPersonForm","preventDefault","find","window","confirm","personId","number","response","status","addedPerson","newPersons","error","map","components_Person","key","console","log","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ff9dfd9d.chunk.js","sourcesContent":["import React from 'react'\n\nconst AddPersonForm = (props) => (\n  <div>\n    <h2>Lisää uusi</h2>\n    <form onSubmit={props.submitHandler}>\n      <div>\n        nimi: <input value={props.nameValue} onChange={props.nameHandler} />\n      </div>\n      <div>\n        numero: <input value={props.numValue} onChange={props.numHandler} />\n      </div>\n      <div>\n        <button type=\"submit\">lisää</button>\n      </div>\n    </form>\n  </div>\n)\n\nexport default AddPersonForm","import React from 'react'\n\nconst Filter = (props) => (\n  <div>\n    <h3>Filtteröi tuloksia</h3>\n    Rajaa näytettäviä:\n      <input type=\"text\" value={props.text} onChange={props.handler} />\n  </div>\n)\n\nexport default Filter","import React from 'react'\n\nconst Person = (props) => (\n  <div>\n    <p>Nimi: {props.name}, Puhelinnumero: {props.num} <button onClick={props.deleteHandler}>poista</button></p>\n  </div>\n)\n\nexport default Person","import axios from 'axios'\n\nconst baseUrl = '/api/persons'\n\nconst getAllPersons = () => {\n  return axios\n    .get(baseUrl)\n    .then(res => res.data)\n}\n\nconst addNewPerson = person => {\n  return axios\n    .post(baseUrl, person)\n    .then(res => res.data)\n}\n\nconst deletePerson = id => {\n  return axios\n    .delete(`${baseUrl}/${id}`)\n    .then(res => res.data)\n}\n\nconst updatePerson = person => {\n  return axios\n    .put(`${baseUrl}/${person.id}`, person)\n    .then(res => res.data)\n}\n\nexport default {\n  getAllPersons,\n  addNewPerson,\n  deletePerson,\n  updatePerson\n}","import React from 'react'\n\nconst Notification = (props) => {\n  const notificationStyle = {\n    position: 'absolute',\n    border: '3px solid',\n    background: props.isBad ? '#ffacac' : '#adefcf',\n    borderColor: props.isBad ? '#ff5555' : '#77cc88',\n    borderRadius: '5px',\n    width: '400px',\n    height: '65px',\n    top: '100px',\n    left: '50%',\n    marginLeft: '-200px',\n    textAlign: 'center'\n  }\n  const notificationTextStyle = {\n    fontSize: '20px',\n    fontWeight: 'bold'\n  }\n\n  return (\n    <div style={notificationStyle}>\n      <p style={notificationTextStyle}>{props.msg}</p>\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport AddPersonForm from './components/AddPersonForm'\nimport Filter from './components/Filter'\nimport Person from './components/Person'\nimport personService from './services/persons'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [shownPersons, setShownPersons] = useState(persons)\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [newFilter, setNewFilter] = useState('')\n  const [notificationMsg, setNotificationMsg] = useState({})\n  const [notificationVisible, setNotificationVisible] = useState(false)\n\n  useEffect(() => {\n    updateAllPersons()\n  }, [])\n\n  useEffect(() => {\n    if (!notificationMsg.msg) return\n    setNotificationVisible(true)\n    setTimeout(() => {\n      setNotificationVisible(false)\n    }, 4000)\n  }, [notificationMsg])\n\n  const updateAllPersons = () => {\n    personService\n      .getAllPersons()\n      .then(fetchedPersons => {\n        setPersons(fetchedPersons)\n        setShownPersons(fetchedPersons)\n      }).catch(() => {\n        setNotificationMsg({ msg: `Henkilöiden haussa tapahtui virhe!`, isBad: true })\n      })\n  }\n\n  const updateFilterField = (e) => {\n    const filterText = e.target.value\n    setNewFilter(filterText)\n    updateShownPersons(filterText)\n  }\n\n  const updateNameField = (e) => {\n    setNewName(e.target.value)\n  }\n\n  const updateNumberField = (e) => {\n    setNewNumber(e.target.value)\n  }\n\n  const deletePerson = person => () => {\n    if (!window.confirm(`Poistetaanko ${person.name}?`)) {\n      return\n    }\n    personService\n      .deletePerson(person.id)\n      .then(() => {\n        updateAllPersons()\n        setNotificationMsg({ msg: `Poistettiin henkilö ${person.name}`, isBad: false })\n      })\n      .catch((e) => {\n        console.log(e)\n        if (e.response.status === 404) {\n          setNotificationMsg({ msg: `Henkilö oli jo poistettu.`, isBad: true })\n          updateAllPersons()\n        } else {\n          setNotificationMsg({ msg: `Virhe henkilön poistossa!`, isBad: true })\n        }\n      })\n  }\n\n  const addNewPerson = (e) => {\n    e.preventDefault()\n    if (persons.find(p => p.name === newName)) {\n      if (!window.confirm(`${newName} on jo luettelossa, korvataanko vanha numero uudella?`)) {\n        return\n      }\n      const personId = persons.find(p => p.name === newName).id\n      personService\n        .updatePerson({ name: newName, number: newNumber, id: personId })\n        .then(person => {\n          setNotificationMsg({ msg: `Päivitettiin henkilön ${person.name} tiedot.` })\n          updateAllPersons()\n        })\n        .catch((e) => {\n          if (e.response.status === 404) {\n            setNotificationMsg({ msg: `Henkilön tietoja ei löydy, ne on luultavasti poistettu.`, isBad: true })\n            updateAllPersons()\n          } else {\n            setNotificationMsg({ msg: `${e.response.data}`, isBad: true })\n          }\n        })\n      return\n    }\n    const newPerson = { name: newName, number: newNumber }\n    personService\n      .addNewPerson(newPerson)\n      .then(addedPerson => {\n        const newPersons = persons.concat(addedPerson)\n        setPersons(newPersons)\n        setShownPersons(newPersons)\n        setNotificationMsg({ msg: `Lisättiin henkilö ${addedPerson.name}` })\n      }).catch(e => {\n        setNotificationMsg({ msg: `${e.response.data.error}`, isBad: true })\n      })\n    setNewName('')\n    setNewNumber('')\n    setNewFilter('')\n  }\n\n  const updateShownPersons = (filterText) => {\n    const filteredPersons = persons.filter(p => {\n      return p.name.toLowerCase().includes(filterText.trim().toLowerCase())\n    })\n    setShownPersons(filteredPersons)\n  }\n\n  return (\n    <div>\n      {notificationVisible ? <Notification msg={notificationMsg.msg} isBad={notificationMsg.isBad} /> : null}\n      <h2>Puhelinluettelo</h2>\n      <Filter text={newFilter} handler={updateFilterField} />\n      <AddPersonForm\n        submitHandler={addNewPerson}\n        nameValue={newName}\n        nameHandler={updateNameField}\n        numValue={newNumber}\n        numHandler={updateNumberField}\n      />\n      <h2>Numerot</h2>\n      <div>\n        {shownPersons.map(p => <Person key={p.id} name={p.name} num={p.number} deleteHandler={deletePerson(p)} />)}\n      </div>\n    </div>\n  )\n\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}